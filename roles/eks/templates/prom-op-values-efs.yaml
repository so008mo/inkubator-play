# Default values for prometheus-operator.

prometheusOperator:
  nodeSelector:
    gcs-nodegroup-type: ng-operations
  tolerations:
    - key: "gcs-nodegroup-taint"
      operator: "Exists"
      #value: "ng-operations"
      #effect: "NoSchedule"

#Prometheus setup
prometheus:
  resources:
    limits:
      cpu: 300m
      memory: 500Mi
  prometheusSpec:
    nodeSelector:
      gcs-nodegroup-type: ng-operations
    tolerations:
      - key: "gcs-nodegroup-taint"
        operator: "Exists"
       # value: "ng-operations"
        #effect: "NoSchedule"
    storageSpec:
      volumeClaimTemplate:
        metadata:
          name: gcs-efs-prometheus-op
          annotations:
            volume.beta.kubernetes.io/storage-class: aws-efs
        spec:
          storageClassName: aws-efs
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: 10Gi

#alretManager Setup
alertmanager:
  resources:
    limits:
      cpu: 100m
      memory: 256Mi
  alertmanagerSpec:
    nodeSelector:
      gcs-nodegroup-type: ng-operations
    tolerations:
      - key: "gcs-nodegroup-taint"
        operator: "Exists"
       # value: "ng-operations"
        #effect: "NoSchedule"
    storage:
      volumeClaimTemplate:
        metadata:
          name: gcs-efs-prometheus-op-alert-mgr
          annotations:
            volume.beta.kubernetes.io/storage-class: aws-efs
        spec:
          storageClassName: aws-efs
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: 10Gi

#Grafana Setup
grafana:
  adminPassword: "Pitney!123"
  nodeSelector:
    gcs-nodegroup-type: ng-operations
  tolerations:
    - key: "gcs-nodegroup-taint"
      operator: "Exists"
      #value: "ng-operations"
     # effect: "NoSchedule"
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
  service:
    type: LoadBalancer
    port: 80
  persistence:
    enabled: true
    storageClassName: aws-efs
    accessModes: ["ReadWriteMany"]
    size: 10Gi

kubelet:
  serviceMonitor:
    https: true